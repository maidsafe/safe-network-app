name: E2E Tests

on: [push, pull_request]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SN_CLI_VERSION: "0.10.1"
  SAFE_VAULT_VERSION: "0.22.0"
  IS_CI: true
  # No CSC Keys etc as PRs dont have access to this.
  NODE_ENV: prod
jobs:
  build:
    name: E2E Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest]
        # no mac as e2e has a bad time there
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Download Safe Vault Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run:  wget "https://github.com/maidsafe/safe_vault/releases/download/${{env.SAFE_VAULT_VERSION}}/safe_vault-${{env.SAFE_VAULT_VERSION}}-x86_64-unknown-linux-musl.tar.gz" -O ./vault.tar.gz;
    
      - name: Download Safe Vault Mac
        if: matrix.os == 'macos-latest'
        run: wget "https://github.com/maidsafe/safe_vault/releases/download/${{env.SAFE_VAULT_VERSION}}/safe_vault-${{env.SAFE_VAULT_VERSION}}-x86_64-apple-darwin.tar.gz" -O ./vault.tar.gz;
    

     - name: Download Safe Vault Win
        if: matrix.os == 'windows-latest'
        run: |
          choco install wget
          wget "https://github.com/maidsafe/safe_vault/releases/download/${{env.SAFE_VAULT_VERSION}}/safe_vault-${{env.SAFE_VAULT_VERSION}}-x86_64-pc-windows-msvc.tar.gz" -O ./vault.tar.gz;
    
      - name: Place Safe Vault
        run:  |
          ls .
          mkdir -p $HOME/.safe/vault
          tar -xvzf ./vault.tar.gz -C $HOME/.safe/vault/
          chmod +x $HOME/.safe/vault/safe_vault

      - name: Download Safe CLI Linux
        if: matrix.os == 'ubuntu-latest'
        run: wget "https://github.com/maidsafe/sn_api/releases/download/${{env.SN_CLI_VERSION}}/sn_cli-${{env.SN_CLI_VERSION}}-x86_64-unknown-linux-gnu.tar.gz" -O ./safe.tar.gz;
      
      - name: Download Safe CLI Mac
        if: matrix.os == 'macos-latest'
        run: wget "https://github.com/maidsafe/sn_api/releases/download/${{env.SN_CLI_VERSION}}/sn_cli-${{env.SN_CLI_VERSION}}-x86_64-apple-darwin.tar.gz" -O ./safe.tar.gz;
      
      - name: Download Safe CLI Windows
        if: matrix.os == 'windows-latest'
        run: wget "https://github.com/maidsafe/sn_api/releases/download/${{env.SN_CLI_VERSION}}/sn_cli-${{env.SN_CLI_VERSION}}-x86_64-pc-windows-msvc.tar.gz" -O ./safe.tar.gz;

      - name: Place Safe CLI
        run:  |
          ls .
          mkdir -p $HOME/.safe/sn_cli
          mkdir -p $HOME/.safe/authd
          tar -xvzf ./safe.tar.gz -C $HOME/.safe/sn_cli/
          echo "::add-path::$HOME/.safe/sn_cli"
          echo "::add-path::$HOME/.safe/authd"
          chmod +x $HOME/.safe/sn_cli/safe


      - name: Start local network
        run: safe vault run-baby-fleming
      - name: Install Safe AuthD
        run: |
          safe auth install
          chmod +x $HOME/.safe/authd/sn_authd
      - name: Use local safe network
        run: |
          safe auth stop || true
          safe networks add local
          safe networks switch local
      - name: Yarn Install
        run: yarn install --ignore-engines --network-timeout 800000;
      - name: Package
        run: yarn package
      - name: Run headless tests
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: yarn test-e2e-packed 
      - name: Check logs on fail
        if: failure()
        run: cat ~/config/safe-network-app/logs/*.log