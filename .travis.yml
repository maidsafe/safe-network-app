env:
  global:
    - secure: "G+hQbK2+8f6XFDopDJNddw3D8pEYx8OcWS4HAPpdXWY3Uo1mOFMObQsK7PjKoVKU7+n/ScL6t1FmRPuqCaxzEZa4jztgtViyVlb04mUI331f0xnuURiSOwHNwkEXpYAOXjmA79UFkSw4BTDVH+A4cJr5wxep+Xr85wGUwRscyDMjNg4DFQHmkNYK+JluquZ2+31yDI/Rl8qgM6vOQAhf4hV72UGKNpjGknPtFqiwnf/j2Q8IT3QiUeOLaEQbgOFAQ/ad7YGt9B0vhRBkh7X3vUMrSU5JXtsZZwETpfOzE6rDUg5d+YJpwhmIlPgqg/o7hL0gyZm+mk5fY/fdWoKAoHSa2/OkMyRN0UXopg5ZDDq1NQb5Pt1a1ndgWH9tlJXRfjXaurtip+ExEamXhr+bMISqbFHyQkLHCnyC1O3LQOLbIHOv6kjNqPYLAHIE/ysagkXg6iZ9k7WOv4Rw436GoMNS1rEL0a2iacC9+X3w770QZ1mlSxYqXsswxtJLvI7kHNN+2vwJb563FJxaaaTYm66T2dYFpZhG0/o0IIM8BPTEGDit8mIBFjzZtbMP1DVRjfZhoX6zc9hXggFr8PdWBHIy6MC3dl23f84X74NnBf6RgDF6EnlQRA5D4YnB8hMHbyzwpl+Zu1ACnKfmdn7Q8QoKOC8bS9Fb/nBr7svqguo="
matrix:
  allow_failures:
    - os: windows
  include:
    - os: osx
      osx_image: xcode11
      language: node_js
      node_js:
        - "12"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    - os: linux
      language: node_js
      services:
        - xvfb
      node_js:
        - "12"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-multilib
            - g++-8
            - g++-multilib
            - icnsutils
            - graphicsmagick
            - xz-utils
            - xorriso
            - rpm

    - os: windows
      language: node_js
      node_js:
        - "12"
      env:
        - YARN_GPG=no # otherwise this starts gpg-agent that never exits
        - secure: "kXDOdQMTzUCUXTLpO9LtTJDA2AkTEFcGCBEtuK6n6IkdtVWz5qu0H5bLk2TIF6iBdT+4uWYURlVJd3PtFfQJ1j2TP3UvAfPrDW1hq9PKhErtArgmzmK6zFGTMVDX+PoVp/IFdEdLYPrINpsz4CNd8ICmEoUc+p4shiDenAuALYDJ4Lmms/Y1tXjjS1BM+x+GopUuXqStNoDPSn+ZG+5kkecozZQEs+1xsmFDZM3aUcogCVK6jUc+qf1bEeFlpZGlaL3cIMXBD0nFlT0arVzUzJdbjpLcZAfcqsbTVrMdiGD4OPPfqPL0HV3t8HFgcqBKEcCmPiRojHyOFWvQPOm7CLOpkDrbd3xyddpu3eb82sxkWJS0Gc6LDv8NbhUOH5S56mKvEfvpMXfV9vmUuc9OrMMh/JcHQ6ada3lPd4WnFcyfT4IyX6D28rNydCAnG0mqsEX2ueqFl/CDsPXmYO43Fweb7VWJeru0dHPnFybfv8+l0jYuWRjo5XKpcytxRIQY2308r/6L1SdCvslM/b14CavhsZ/4sJg975NxgApJOn850yyq5APWFV6fqNsD6K7F6erLJNvXDhq0dyGNGtoYGisYJ+vM425o+D6heKuOlU1LgeL2l2eSDDPbzfkuCwllzv9Hsn2SLOQ63DiniZIiBoRfbPvpTiMq8VfRlT5TVag="
        - WIN_CSC_LINK="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"


before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

cache:
  yarn: true
  directories:
    - node_modules
    - $(npm config get prefix)/lib/node_modules
    # - $HOME/.cache/electron
    # - $HOME/.cache/electron-builder

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export CXX="g++-8"; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get update; fi
  - yarn config delete proxy
  - yarn --version
  - npm --version
  - npm config rm proxy
  - npm config rm https-proxy
  # - npm config set cache-lock-retries 500

install:
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then yarn; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then travis_wait 30 yarn --ignore-engines --network-timeout 800000; fi
  # On Linux, initialize "virtual display". See before_script
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      /sbin/start-stop-daemon \
      --start \
      --quiet \
      --pidfile /tmp/custom_xvfb_99.pid \
      --make-pidfile \
      --background \
      --exec /usr/bin/Xvfb \
      -- :99 -ac -screen 0 1280x1024x16
    else
      :
    fi
script:
  - yarn lint --quiet
  - yarn check-types
  - yarn test
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then DEBUG="electron-builder" yarn package; fi
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then yarn package; fi
  - travis_retry yarn test-e2e-packed

before_deploy:
  - |
    if [[ $TRAVIS_TAG == *"RC"* || $TRAVIS_TAG == *"rc"* ]]; then
      export IS_RC=yes
    fi
  - if [[ "$TRAVIS_OS_NAME" != "windows" && "$IS_RC" != "yes" ]]; then NODE_ENV=prod yarn deploy; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export RELEASE_PROD_EXE="$(ls release/*-mac-x64.dmg)";
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export RELEASE_PROD_EXE="$(ls release/*-linux-x64.AppImage)";
    fi
  - if [[ "$TRAVIS_OS_NAME" == "win" ]]; then export RELEASE_PROD_EXE="$(ls release/*-win-x64.exe)";
    fi
  - echo "deploying ${RELEASE_PROD_EXE} to GitHub releases as tagged with ${TRAVIS_TAG}"
  - if [[ "$IS_RC" != "yes" ]]; then ls release; fi


deploy:
  provider: releases
  skip_cleanup: true
  api_key: $GH_TOKEN
  file:
    - "${RELEASE_PROD_EXE}"
  draft: true
  tag_name: $TRAVIS_TAG
  on:
    tags: true
    branch: dev
